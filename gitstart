#!/usr/bin/env bash

########################
# Author: Shinichi Okada
# Date: 2021-05-22
###########################

unset user dir repo license_url

script_name=$(basename "$0")
dir=""
version="0.2.7"

usage() {
    cat <<EOF

Script name: $script_name

Description:
============

This script automate creating git repo.
This will create a dir, add a license, README file, run git init and push to Github. 

If a language is added, it will try to add the .gitignore.
Choose SSH as the default git protocol.

List of .gitignore supported by Github
======================================

See https://github.com/github/gitignore

Dependencies:
=============

- gh, GitHub CLI https://cli.github.com/manual/

Usage:
======

$script_name [ -l | --lang programming_language ] [ -d | --dir directory ] [ -h | --help | -v | --version]

Examples:
=========

    $script_name -l python -d newrepo
    $script_name -d newrepo
    # in a directory
    $script_name -d .
    # Show help
    $script_name -h
    # Show version
    $script_name -v
EOF
}

while (($# > 0)); do # while arguments count>0
    case "$1" in
    -h | --help)
        usage
        exit
        ;;
    -v | --version)
        echo ${version}
        exit
        ;;
    *) # directory
        dir="$1"
        shift
        ;;
    esac
done

############# Main body ############
# check if you are logged in github
if [[ $(gh auth status) -eq 1 ]]; then
    # not logged-in
    echo ">>> You must logged in. Use 'gh auth login'"
    exit 1
fi

# don't allow to create a git repo in the ~ (HOME)
# user may use . in the HOME
if [[ ${dir} = "$HOME" ]]; then
    echo "This script doesn't allow to create a git repo in the home directory."
    echo "Use another directory."
    exit 1
fi

# if dir is empty exit
if [[ -z ${dir} ]]; then
    dir=$(pwd)
fi

# check if you have Github CLI
if [ ! "$(command -v gh)" ]; then
    echo "Please install Github CLI from https://cli.github.com/manual/."
    exit 2
fi

echo ">>> Creating ${dir}."
mkdir -p "$dir" || exit

repo=$(basename "${dir}")
echo ">>> Your new repo name is ${repo}."
# ask github username
echo "Please enter your Github username."
read -r USERNAME
echo "$USERNAME" > "$HOME/.config/gitstart"
cd "$dir" || exit

echo ">>> Creating ${repo} in the remote..."
gh repo create "${repo}" 2>/dev/null
echo ">>> Running git init."
git init
echo ">>> Cloning the remote repo to local..."
git clone "git@github.com:${USERNAME}/${repo}.git"

# gh created a repo pull the files from remote
# git pull origin main â€“allow-unrelated-histories
# gh repo clone "${repo}"
# README
echo ">>> Creating README.md."
printf "# %s \n
## Overview\n\n
## Requirement\n\n
## Usage\n\n
## Features\n\n
## Reference\n\n
## Author\n\n
## License

Please see license.txt.\n" "${repo}" >README.md

echo ">>> Adding README.md."
git add .
echo ">>> Commiting ..."
git commit -m "README added."
echo ">>> Pushing local repo to the remote."
git push -u origin main
exit 0
