#!/usr/bin/env bash

# This script automate git repo
# You must install GitHub CLI https://cli.github.com/manual/.
# Install yq https://github.com/mikefarah/yq
# Choose SSH as the default git protocol.

user=$(yq e '."github.com".user' "$HOME"/.config/gh/hosts.yml)
dir="$PWD"
repo=$(basename "$dir")
echo ">>> Your github username is ${user}."

if [[ $1 ]]; then
    # github gitignore url
    url=https://raw.githubusercontent.com/github/gitignore/master/"${1^}".gitignore
    # get the status http code, 200, 404 etc.
    http_status=$(curl --write-out '%{http_code}' --silent --output /dev/null "$url")

    if [[ $http_status -eq 200 ]]; then
        # get argument e.g python, go etc, capitalize it
        echo ">>> Creating .gitignore for ${1^}..."
        # create .gitignore
        curl "$url" -o .gitignore
        echo ">>> .gitignore created."
    else
        echo ">>> Not able to find ${1^} gitignore at https://github.com/github/gitignore."
        exit 1
    fi
fi

echo ">>> Creating READMR.md."
printf "# %s \n 
## Overview \n\n 
## Requirement \n\n
## Usage \n\n 
## Features \n\n 
## Reference \n\n 
## Author \n\n 
## Licence" "$repo" >> README.md
echo ">>> Running git init."
git init
echo ">>> Adding README.md and .gitignore."
git add .
echo ">>> Commiting with a message 'first commit'."
git commit -m "first commit"
echo ">>> Creating the main branch."
git branch -M main


# check if you are logged in
if [[ $(gh auth status) -eq 1 ]]; then
    # not logged-in
    echo ">>> You must logged in. Use 'gh auth login'"
    exit 1
else
    echo ">>> You are logged in. Creating your ${repo} in remote."
    gh repo create "$repo"
    git remote add origin git@github.com:"$user"/"$repo".git
    echo ">>> Pushing local repo to the remote."
    git push -u origin main
    echo ">>> You have created a github repo at https://github.com/$user/$repo"
fi